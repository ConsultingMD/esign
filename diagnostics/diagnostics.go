// Copyright 2017 James Cote and Liberty Fund, Inc.
// All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by gen-esign; DO NOT EDIT.

// Package diagnostics implements the DocuSign SDK
// category Diagnostics.
// 
// The Diagnostics category provides miscellaneous end points.
// 
// They include:
// * Requesting and managing the API call-logging feature. (Perfect for debugging your app!)
// * Getting information on the API's resources and versions.
// Api documentation may be found at:
// https://docs.docusign.com/esign/restapi/Diagnostics
package diagnostics

import (
    "net/url"
    
    "golang.org/x/net/context"
    
    "github.com/jfcote87/esign"
    "github.com/jfcote87/esign/model"
)

// Service generates DocuSign Diagnostics Category API calls
type Service struct {
    credential esign.Credential 
}

// New initializes a diagnostics service using cred to authorize calls.
func New(cred esign.Credential) *Service {
    return &Service{credential: cred}
}

// DeleteRequestLogs deletes the request log files.
// SDK Method Diagnostics::deleteRequestLogs
// https://docs.docusign.com/esign/restapi/Diagnostics/RequestLogs/delete
func (s *Service) DeleteRequestLogs() *DeleteRequestLogsCall {
    return &DeleteRequestLogsCall{
        &esign.Call{
            Credential: s.credential,
    		Method:  "DELETE",
            Path: "/v2/diagnostics/request_logs",
            QueryOpts: make(url.Values),
        },
    }
}

// DeleteRequestLogsCall implements DocuSign API SDK Diagnostics::deleteRequestLogs
type DeleteRequestLogsCall struct {
    *esign.Call
}

// Do executes the call.  A nil context will return error.
func (op *DeleteRequestLogsCall) Do(ctx context.Context)  error {
    
    return op.Call.Do(ctx, nil)
}

// GetRequestLog gets a request logging log file.
// SDK Method Diagnostics::getRequestLog
// https://docs.docusign.com/esign/restapi/Diagnostics/RequestLogs/get
func (s *Service) GetRequestLog(requestLogID string) *GetRequestLogCall {
    return &GetRequestLogCall{
        &esign.Call{
            Credential: s.credential,
    		Method:  "GET",
            Path: "/v2/diagnostics/request_logs/{requestLogId}",
            PathParameters: map[string]string{ 
                "{requestLogId}": requestLogID,
            },
            QueryOpts: make(url.Values),
        },
    }
}

// GetRequestLogCall implements DocuSign API SDK Diagnostics::getRequestLog
type GetRequestLogCall struct {
    *esign.Call
}

// Do executes the call.  A nil context will return error.
func (op *GetRequestLogCall) Do(ctx context.Context)  (*esign.File, error) {
    var res *esign.File
    return res, op.Call.Do(ctx, &res)
}

// GetRequestLogSettings gets the API request logging settings.
// SDK Method Diagnostics::getRequestLogSettings
// https://docs.docusign.com/esign/restapi/Diagnostics/RequestLogs/getSettings
func (s *Service) GetRequestLogSettings() *GetRequestLogSettingsCall {
    return &GetRequestLogSettingsCall{
        &esign.Call{
            Credential: s.credential,
    		Method:  "GET",
            Path: "/v2/diagnostics/settings",
            QueryOpts: make(url.Values),
        },
    }
}

// GetRequestLogSettingsCall implements DocuSign API SDK Diagnostics::getRequestLogSettings
type GetRequestLogSettingsCall struct {
    *esign.Call
}

// Do executes the call.  A nil context will return error.
func (op *GetRequestLogSettingsCall) Do(ctx context.Context)  (*model.DiagnosticsSettingsInformation, error) {
    var res *model.DiagnosticsSettingsInformation
    return res, op.Call.Do(ctx, &res)
}

// ListRequestLogs gets the API request logging log files.
// SDK Method Diagnostics::listRequestLogs
// https://docs.docusign.com/esign/restapi/Diagnostics/RequestLogs/list
func (s *Service) ListRequestLogs() *ListRequestLogsCall {
    return &ListRequestLogsCall{
        &esign.Call{
            Credential: s.credential,
    		Method:  "GET",
            Path: "/v2/diagnostics/request_logs",
            QueryOpts: make(url.Values),
        },
    }
}

// ListRequestLogsCall implements DocuSign API SDK Diagnostics::listRequestLogs
type ListRequestLogsCall struct {
    *esign.Call
}

// Do executes the call.  A nil context will return error.
func (op *ListRequestLogsCall) Do(ctx context.Context)  (*model.APIRequestLogsResult, error) {
    var res *model.APIRequestLogsResult
    return res, op.Call.Do(ctx, &res)
}

// Encoding set the call query parameter encoding
func (op *ListRequestLogsCall) Encoding(val string) *ListRequestLogsCall {
    op.QueryOpts.Set("encoding", val)
    return op
}

// UpdateRequestLogSettings enables or disables API request logging for troubleshooting.
// SDK Method Diagnostics::updateRequestLogSettings
// https://docs.docusign.com/esign/restapi/Diagnostics/RequestLogs/updateSettings
func (s *Service) UpdateRequestLogSettings(requestLogs *model.DiagnosticsSettingsInformation) *UpdateRequestLogSettingsCall {
    return &UpdateRequestLogSettingsCall{
        &esign.Call{
            Credential: s.credential,
    		Method:  "PUT",
            Path: "/v2/diagnostics/settings",
            Payload: requestLogs,
            QueryOpts: make(url.Values),
        },
    }
}

// UpdateRequestLogSettingsCall implements DocuSign API SDK Diagnostics::updateRequestLogSettings
type UpdateRequestLogSettingsCall struct {
    *esign.Call
}

// Do executes the call.  A nil context will return error.
func (op *UpdateRequestLogSettingsCall) Do(ctx context.Context)  (*model.DiagnosticsSettingsInformation, error) {
    var res *model.DiagnosticsSettingsInformation
    return res, op.Call.Do(ctx, &res)
}

// GetResources lists resources for REST version specified
// SDK Method Diagnostics::getResources
// https://docs.docusign.com/esign/restapi/Diagnostics/Resources/get
func (s *Service) GetResources() *GetResourcesCall {
    return &GetResourcesCall{
        &esign.Call{
            Credential: s.credential,
    		Method:  "GET",
            Path: "/v2",
            QueryOpts: make(url.Values),
        },
    }
}

// GetResourcesCall implements DocuSign API SDK Diagnostics::getResources
type GetResourcesCall struct {
    *esign.Call
}

// Do executes the call.  A nil context will return error.
func (op *GetResourcesCall) Do(ctx context.Context)  (*model.ResourceInformation, error) {
    var res *model.ResourceInformation
    return res, op.Call.Do(ctx, &res)
}

// GetService retrieves the available REST API versions.
// SDK Method Diagnostics::getService
// https://docs.docusign.com/esign/restapi/Diagnostics/Services/get
func (s *Service) GetService() *GetServiceCall {
    return &GetServiceCall{
        &esign.Call{
            Credential: s.credential,
    		Method:  "GET",
            Path: "/service_information",
            QueryOpts: make(url.Values),
        },
    }
}

// GetServiceCall implements DocuSign API SDK Diagnostics::getService
type GetServiceCall struct {
    *esign.Call
}

// Do executes the call.  A nil context will return error.
func (op *GetServiceCall) Do(ctx context.Context)  (*model.ServiceInformation, error) {
    var res *model.ServiceInformation
    return res, op.Call.Do(ctx, &res)
}

